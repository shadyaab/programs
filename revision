Access Specifier
  private  - same class
  protected - derived class/within same package
  default - derived class/ any package
  public - access anywhere.
  
Composition 
  - has a relationship
  - Creating object in another class.
  - It is used when you want to access feature of an existing class.
  - Ex. :  Car has a Engine
  
Aggregation 
  - dynamic composition
  
Association
  - 

Inheriatance
  - IS a relationship
  - It like verionsing the feature of an existing class.
  
Note: 
  - islike-a-relationship: If class is derived as well as inherited.
  - Ex. :  B extends A implement I


JavaDocs 
  - Embed HtMl
  - doc Tags
  
============================================================================================
Operators 
===========================================================================================
# Argument(Non-primitive) in method call is "Pass by Reference".
# Follows BODMAS rule

long a = 23;     //Valid
long a = 23l;    //Valid
long a = 23L;    //Valid

Long a = 23;     //Not Valid
Long a = 23l;    //Valid
Long a = 23L;    //Valid

* Same for all others like Double, float...

float f = 1.39 e-43f
  - It means 1.39 X (10 to the power -43)
  - Compiler normally takes exponential as Double, so trailing f is required.
  - In maths it means (1.39 X (e to power -43)). e refer to 2.718
  - double f1 = 2e2    // 200
  
float f1 = 3.2;  // Invalid since 3.2 is double  

if(i1 = i2)     // Invalid  (i1, i2 is int)
if(b1 = b2)     // Valid    (b1, b2 is boolean)

sizeOf()        //Its not in java since all the data types are same on different machine 


============================================================================================
Controlling Execution
============================================================================================

for(int i = 1, j = i + 10; i < 5; i++, j = i * 2) {
      System.out.println("i = " + i + " j = " + j);
}

  - Can define multiple variables
  - It should be of same type
  - pre increment or post increment doesn't impact
  
for(int i : range(10)){
  System.out.println("i = " + i);
}
  - forEach 
  - Range Automatically generate appropiate array
  
============================================================================================
Keywords
============================================================================================
final 
  - Value cannot be changes once assigned.
  - if we make reference as final, we cannnot change the reference and point to other object but the values of the Object can be 
    modified.
  - Value can be assing in final varible in two places
      1. When is declared.
      2. In constructor
  - We can declare final in the method argument
  - Any private member is implicitly final.
  - If used with class  -> Class cannot be extended.
  - If used with metohd -> Method cannot be overriden
  - If used with variable -> Value/Reference cannnot be changed.
  
abstract
  - 





============================================================================================
Inheritance 
============================================================================================

* In inheritance, subObject of base class is placed inside the derived class.

Overriding 
  - Same Signature
  - Covarient return type (Is-a-relationship)
  - Cannot reduce visibility
  - Exception 
      - If super class doesn't declare exception 
            -> Can't declare any checked exception
            -> It can declare checked exception.
      - If super class declare exception 
            -> Can declare same exception
            -> Can declare exception lower the hierarchy
            -> Can choose not to declare any exception 
  
Overloading 
  - Same signature
  - Return type doesn't matter
  - Visiblity doesn't matter
  

  
  

  
  
  

